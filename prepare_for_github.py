#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ GitHub
"""

import os
import shutil

print("=" * 60)
print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è GitHub")
print("=" * 60)
print()

# 1. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º README_GITHUB.md –≤ README.md
if os.path.exists('README_GITHUB.md'):
    if os.path.exists('README.md'):
        # –î–µ–ª–∞–µ–º –±—ç–∫–∞–ø —Å—Ç–∞—Ä–æ–≥–æ README
        shutil.copy2('README.md', 'README_OLD.md')
        print("üìÑ –°—Ç–∞—Ä—ã–π README.md —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ README_OLD.md")
    
    shutil.copy2('README_GITHUB.md', 'README.md')
    print("‚úÖ README_GITHUB.md ‚Üí README.md")
else:
    print("‚ùå README_GITHUB.md –Ω–µ –Ω–∞–π–¥–µ–Ω!")

print()

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
if os.path.exists('.gitignore'):
    with open('.gitignore', 'r') as f:
        gitignore_content = f.read()
    
    required = ['config.py', '*.db', '__pycache__']
    missing = [r for r in required if r not in gitignore_content]
    
    if missing:
        print(f"‚ö†Ô∏è –í .gitignore –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: {', '.join(missing)}")
    else:
        print("‚úÖ .gitignore –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
else:
    print("‚ùå .gitignore –Ω–µ –Ω–∞–π–¥–µ–Ω!")

print()

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ config.py (–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω)
if os.path.exists('config.py'):
    print("‚ö†Ô∏è config.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —É–±–µ–¥–∏—Å—å —á—Ç–æ –æ–Ω –≤ .gitignore!")
else:
    print("‚úÖ config.py –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –û–ö –¥–ª—è GitHub)")

print()

# 4. –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è GitHub
github_files = [
    'README.md',
    'INSTALL.md',
    'GITHUB_GUIDE.md',
    'bot.py',
    'database.py',
    'keyboards.py',
    'utils.py',
    'backup.py',
    'config.example.py',
    'requirements.txt',
    '.gitignore'
]

print("üì¶ –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ GitHub:")
print()

total_size = 0
for filename in github_files:
    if os.path.exists(filename):
        size = os.path.getsize(filename)
        total_size += size
        size_kb = size / 1024
        print(f"   ‚úÖ {filename:<30} ({size_kb:.1f} KB)")
    else:
        print(f"   ‚ùå {filename:<30} (–ù–ï –ù–ê–ô–î–ï–ù)")

print()
print(f"üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size / 1024:.1f} KB")
print()

# 5. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
print("=" * 60)
print("‚ö†Ô∏è  –í–ê–ñ–ù–û –ü–ï–†–ï–î –ó–ê–ì–†–£–ó–ö–û–ô:")
print("=" * 60)
print("1. –ù–ï –∑–∞–≥—Ä—É–∂–∞–π config.py —Å —Ç–æ–∫–µ–Ω–∞–º–∏!")
print("2. –ù–ï –∑–∞–≥—Ä—É–∂–∞–π users.db —Å –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
print("3. –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ .gitignore —Ä–∞–±–æ—Ç–∞–µ—Ç")
print()

print("üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ GitHub:")
print("=" * 60)
print("git init")
print("git add .")
print('git commit -m "Initial commit: Music Davinchi Bot"')
print("git remote add origin https://github.com/USERNAME/REPO.git")
print("git branch -M main")
print("git push -u origin main")
print("=" * 60)
print()

print("‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è GitHub")

